buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

sourceCompatibility = 11
targetCompatibility = 11

def isEnterprise = false
repositories {
    mavenCentral()
    if (isEnterprise) {
        maven {
            url = "https://camunda.jfrog.io/artifactory/camunda-bpm-ee"
            credentials {
                username = project.getProperty("artifactoryUsername")
                password = project.getProperty("artifactoryToken")
            }
        }
    }
}

ext {
    camundaEngineVersion = '7.16.0'
    camundaEnterpriseVersion = '7.16.1-ee'
    camundaAssertVersion = '10.0.0'
    camundaTestCovergageVersion = '0.4.0'
    jaxbVersion = '3.0.1'
    awsSdkVersion = '2.17.138'
    lombokVersion = '1.18.22'
}

dependencies {
    // Camunda BOM
    implementation platform("org.camunda.bpm:camunda-bom:$camundaEngineVersion")
    if (isEnterprise) {
        implementation platform("org.camunda.bpm:camunda-bom:$camundaEnterpriseVersion")
    }

    // Camunda
    implementation("org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest")
    if (isEnterprise) {
        implementation("org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp-ee")
    } else {
        implementation("org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp")
    }

    // Spring boot plugins
    implementation("org.springframework.boot:spring-boot-starter-jdbc") // Needed to use custom datasource url
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-data-jdbc")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    // Camunda plugins
    implementation("org.camunda.bpm:camunda-engine-plugin-spin")
    implementation("org.camunda.spin:camunda-spin-dataformat-all")

    // Groovy scripting
    implementation("org.codehaus.groovy:groovy-all:3.0.8")

    // Database
    implementation("com.h2database:h2")
    implementation("org.postgresql:postgresql")

    // JAXB
    implementation("com.sun.xml.bind:jaxb-impl:$jaxbVersion")

    // AWS BOM
    implementation platform("software.amazon.awssdk:bom:$awsSdkVersion")

    // AWS SDK
    implementation("software.amazon.awssdk:sqs")
    implementation("software.amazon.awssdk:sns")

    // Lombok
    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")

    // Testing
    testImplementation("org.camunda.bpm.extension:camunda-bpm-process-test-coverage:$camundaTestCovergageVersion")
    testImplementation("org.camunda.bpm.assert:camunda-bpm-assert:$camundaAssertVersion")
    testImplementation("org.assertj:assertj-core")
}
